SIGNAL BUS
Lists all signals, what they do, and what they require

gameplay_manager.gd
	signal ddcc_health_changed(new_health:int)
		Emitted: when the ddccs health is changed
		new_health:int = what the health has been changed to
	signal playtime_updated(time:int)
		Emitted: when the playtime changes
		time:int = the new time
		Note: This is echoed from the playtime timer
	signal game_state_updated(state:GAMESTATE)
		enum GAMESTATE {WAITING, STARTING, RUNNING, PAUSED, ENDING}
		Emitted: when game state changes
		state:GAMESTATE = what state the game is going into
		WAITING = before game starts
		STARTING = game is just beginning
		RUNNING = game is in full swing (after unpausing)
		PAUSED = game is paused
		ENDING = game is over, time to clean up

drone_manager.gd
	signal drone_created(drone:Drone)
		Emitted: when a new drone is made
		drone:Drone is the new drone
	signal drone_deployed(drone:Drone)
		Emitted: 
		drone:Drone

enemy_manager.gd
	signal enemy_created(enemy:Node)
		Emitted: new enemy is created
		enemy:Node = enemy that was created

drone.gd
	signal state_changed(drone:Drone, new_state:int)
		Emitted: drone goes though a state transition
		drone:Drone = drone changing
		new_state:int = enum value of the new state


base_enemy.gd
	signal died(enemy:Node)
		Emitted: enemy has 0 hp and is dead
		enemy:Node = itself
